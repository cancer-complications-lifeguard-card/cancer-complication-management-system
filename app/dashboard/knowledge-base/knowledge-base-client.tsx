'use client';

import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Search, FileText, BookOpen, Stethoscope, Calendar, ExternalLink, Download } from 'lucide-react';

// Áü•ËØÜÂ∫ìÂàÜÁ±ª
const KNOWLEDGE_CATEGORIES = {
  NCCN: { label: 'NCCNÊåáÂçó', icon: FileText, color: 'bg-blue-100 text-blue-800' },
  LITERATURE: { label: 'ÂåªÂ≠¶ÊñáÁåÆ', icon: BookOpen, color: 'bg-green-100 text-green-800' },
  TREATMENT: { label: 'Ê≤ªÁñóÊñπÊ°à', icon: Stethoscope, color: 'bg-purple-100 text-purple-800' },
  GUIDELINES: { label: '‰∏¥Â∫äÊåáÂçó', icon: Calendar, color: 'bg-orange-100 text-orange-800' }
};

// Ê®°ÊãüÁöÑÁü•ËØÜÂ∫ìÊï∞ÊçÆ
const KNOWLEDGE_BASE_DATA = [
  {
    id: 1,
    title: 'NCCNËÇ∫Áôå‰∏¥Â∫äÊåáÂçóÔºà2024ÁâàÔºâ',
    category: 'NCCN',
    description: 'ÈùûÂ∞èÁªÜËÉûËÇ∫ÁôåÁöÑÁ≠õÊü•„ÄÅËØäÊñ≠„ÄÅÂàÜÊúüÂíåÊ≤ªÁñóÂÖ®ÊµÅÁ®ãÊåáÂçóÔºåÂåÖÂê´ÊúÄÊñ∞ÁöÑÂÖçÁñ´Ê≤ªÁñóÂíåÈù∂ÂêëÊ≤ªÁñóÊñπÊ°à„ÄÇ',
    publishDate: '2024-01-15',
    author: 'NCCNÂßîÂëò‰ºö',
    tags: ['ËÇ∫Áôå', 'ÂÖçÁñ´Ê≤ªÁñó', 'Èù∂ÂêëÊ≤ªÁñó'],
    url: '#',
    downloadable: true,
    featured: true
  },
  {
    id: 2,
    title: 'PD-1/PD-L1ÊäëÂà∂ÂâÇÂú®ÂÆû‰ΩìËÇøÁò§‰∏≠ÁöÑÂ∫îÁî®',
    category: 'LITERATURE',
    description: 'Á≥ªÁªüÂàÜÊûêPD-1/PD-L1ÂÖçÁñ´Ê£ÄÊü•ÁÇπÊäëÂà∂ÂâÇÂú®‰∏çÂêåÂÆû‰ΩìËÇøÁò§‰∏≠ÁöÑÁñóÊïàÂíåÂÆâÂÖ®ÊÄßÊï∞ÊçÆ„ÄÇ',
    publishDate: '2024-02-20',
    author: 'Journal of Clinical Oncology',
    tags: ['ÂÖçÁñ´Ê≤ªÁñó', 'PD-1', 'PD-L1'],
    url: '#',
    downloadable: false,
    featured: true
  },
  {
    id: 3,
    title: '‰π≥ËÖ∫ÁôåÊñ∞ËæÖÂä©ÂåñÁñóÊ†áÂáÜÊñπÊ°à',
    category: 'TREATMENT',
    description: 'HER2Èò≥ÊÄßÂíå‰∏âÈò¥ÊÄß‰π≥ËÖ∫ÁôåÁöÑÊñ∞ËæÖÂä©Ê≤ªÁñóÊñπÊ°àÈÄâÊã©ÂíåÁñóÊïàËØÑ‰º∞Ê†áÂáÜ„ÄÇ',
    publishDate: '2024-01-30',
    author: '‰∏≠ÂõΩÊäóÁôåÂçè‰ºö',
    tags: ['‰π≥ËÖ∫Áôå', 'Êñ∞ËæÖÂä©Ê≤ªÁñó', 'HER2'],
    url: '#',
    downloadable: true,
    featured: false
  },
  {
    id: 4,
    title: 'ÁªìÁõ¥ËÇ†ÁôåÂàÜÂ≠êÂàÜÂûã‰∏éÁ≤æÂáÜÊ≤ªÁñóÊåáÂçó',
    category: 'GUIDELINES',
    description: 'Âü∫‰∫éÂü∫Âõ†Á™ÅÂèòÁä∂ÊÄÅÁöÑÁªìÁõ¥ËÇ†Áôå‰∏™‰ΩìÂåñÊ≤ªÁñóÁ≠ñÁï•ÂíåÁî®ËçØÊåáÂØºÂéüÂàô„ÄÇ',
    publishDate: '2023-12-10',
    author: 'CSCO',
    tags: ['ÁªìÁõ¥ËÇ†Áôå', 'ÂàÜÂ≠êÂàÜÂûã', 'Á≤æÂáÜÊ≤ªÁñó'],
    url: '#',
    downloadable: true,
    featured: false
  },
  {
    id: 5,
    title: 'ËÇøÁò§ÂÖçÁñ´Ê≤ªÁñóÁõ∏ÂÖ≥‰∏çËâØÂèçÂ∫îÁÆ°ÁêÜ‰∏ìÂÆ∂ÂÖ±ËØÜ',
    category: 'GUIDELINES',
    description: 'ÂÖçÁñ´Ê≤ªÁñóÁõ∏ÂÖ≥‰∏çËâØÂèçÂ∫îÁöÑËØÜÂà´„ÄÅÂàÜÁ∫ß„ÄÅÂ§ÑÁêÜÂíåÈ¢ÑÈò≤Á≠ñÁï•ÁöÑ‰∏ìÂÆ∂ÂÖ±ËØÜÊÑèËßÅ„ÄÇ',
    publishDate: '2024-02-05',
    author: '‰∏≠ÂçéÂåªÂ≠¶‰ºöËÇøÁò§Â≠¶ÂàÜ‰ºö',
    tags: ['ÂÖçÁñ´Ê≤ªÁñó', '‰∏çËâØÂèçÂ∫î', 'ÂÆâÂÖ®ÁÆ°ÁêÜ'],
    url: '#',
    downloadable: true,
    featured: true
  },
  {
    id: 6,
    title: 'CAR-TÁªÜËÉûÊ≤ªÁñóË°ÄÊ∂≤ËÇøÁò§‰∏¥Â∫äÁ†îÁ©∂ËøõÂ±ï',
    category: 'LITERATURE',
    description: 'CAR-TÁªÜËÉûÊ≤ªÁñóÂú®BÁªÜËÉûÊÄ•ÊÄßÊ∑ãÂ∑¥ÁªÜËÉûÁôΩË°ÄÁóÖÂíåÊ∑ãÂ∑¥Áò§‰∏≠ÁöÑÊúÄÊñ∞‰∏¥Â∫äÁ†îÁ©∂ÁªìÊûú„ÄÇ',
    publishDate: '2024-01-20',
    author: 'Nature Medicine',
    tags: ['CAR-T', 'Ë°ÄÊ∂≤ËÇøÁò§', 'ÁªÜËÉûÊ≤ªÁñó'],
    url: '#',
    downloadable: false,
    featured: false
  },
  {
    id: 7,
    title: 'ËÉÉÁôåÂõ¥ÊâãÊúØÊúüÁªºÂêàÊ≤ªÁñóËßÑËåÉ',
    category: 'TREATMENT',
    description: 'ËÉÉÁôåÊÇ£ËÄÖÂõ¥ÊâãÊúØÊúüÁöÑËê•ÂÖªÊîØÊåÅ„ÄÅÊñ∞ËæÖÂä©Ê≤ªÁñóÂíåÊúØÂêéËæÖÂä©Ê≤ªÁñóÁöÑÊ†áÂáÜÂåñÊñπÊ°à„ÄÇ',
    publishDate: '2023-11-25',
    author: '‰∏≠ÂõΩÂåªÂ∏àÂçè‰ºöÂ§ñÁßëÂåªÂ∏àÂàÜ‰ºö',
    tags: ['ËÉÉÁôå', 'Âõ¥ÊâãÊúØÊúü', 'ÁªºÂêàÊ≤ªÁñó'],
    url: '#',
    downloadable: true,
    featured: false
  },
  {
    id: 8,
    title: 'ËÇùÁôå‰ªãÂÖ•Ê≤ªÁñóÊäÄÊúØËßÑËåÉÔºà2024‰øÆËÆ¢ÁâàÔºâ',
    category: 'NCCN',
    description: 'ËÇùÂä®ËÑâÂåñÁñóÊ†ìÂ°ûÊúØÔºàTACEÔºâÂíåÂ∞ÑÈ¢ëÊ∂àËûçÁ≠â‰ªãÂÖ•Ê≤ªÁñóÊäÄÊúØÁöÑÊìç‰ΩúËßÑËåÉÂíåÈÄÇÂ∫îËØÅ„ÄÇ',
    publishDate: '2024-02-28',
    author: '‰ªãÂÖ•ÂåªÂ≠¶‰∏ìÂßî‰ºö',
    tags: ['ËÇùÁôå', '‰ªãÂÖ•Ê≤ªÁñó', 'TACE'],
    url: '#',
    downloadable: true,
    featured: false
  }
];

export function KnowledgeBaseClient() {
  const [searchTerm, setSearchTerm] = useState('');
  const [activeCategory, setActiveCategory] = useState('ALL');
  const [filteredData, setFilteredData] = useState(KNOWLEDGE_BASE_DATA);

  // ÊêúÁ¥¢ÂíåÁ≠õÈÄâÈÄªËæë
  const handleSearch = (value: string) => {
    setSearchTerm(value);
    filterData(value, activeCategory);
  };

  const handleCategoryChange = (category: string) => {
    setActiveCategory(category);
    filterData(searchTerm, category);
  };

  const filterData = (search: string, category: string) => {
    let filtered = KNOWLEDGE_BASE_DATA;

    // ÂàÜÁ±ªÁ≠õÈÄâ
    if (category !== 'ALL') {
      filtered = filtered.filter(item => item.category === category);
    }

    // ÊêúÁ¥¢Á≠õÈÄâ
    if (search.trim()) {
      filtered = filtered.filter(item =>
        item.title.toLowerCase().includes(search.toLowerCase()) ||
        item.description.toLowerCase().includes(search.toLowerCase()) ||
        item.tags.some(tag => tag.toLowerCase().includes(search.toLowerCase())) ||
        item.author.toLowerCase().includes(search.toLowerCase())
      );
    }

    setFilteredData(filtered);
  };

  // Ëé∑ÂèñÊé®ËçêÂÜÖÂÆπ
  const featuredItems = KNOWLEDGE_BASE_DATA.filter(item => item.featured);

  return (
    <div className="space-y-6">
      {/* ÊêúÁ¥¢Ê°Ü */}
      <div className="relative">
        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-4 w-4" />
        <Input
          type="text"
          placeholder="ÊêúÁ¥¢ÊåáÂçó„ÄÅÊñáÁåÆ„ÄÅÊ≤ªÁñóÊñπÊ°à..."
          value={searchTerm}
          onChange={(e) => handleSearch(e.target.value)}
          className="pl-10"
        />
      </div>

      {/* Êé®ËçêÂÜÖÂÆπ */}
      {!searchTerm && (
        <div className="mb-6">
          <h3 className="text-lg font-semibold mb-4">üìå Êé®ËçêÈòÖËØª</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {featuredItems.slice(0, 3).map((item) => {
              const categoryConfig = KNOWLEDGE_CATEGORIES[item.category as keyof typeof KNOWLEDGE_CATEGORIES];
              const Icon = categoryConfig.icon;
              
              return (
                <Card key={item.id} className="border-l-4 border-l-blue-500">
                  <CardHeader className="pb-2">
                    <div className="flex items-center gap-2 mb-2">
                      <Icon className="h-4 w-4" />
                      <Badge variant="secondary" className={categoryConfig.color}>
                        {categoryConfig.label}
                      </Badge>
                    </div>
                    <CardTitle className="text-sm line-clamp-2">{item.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <p className="text-sm text-gray-600 line-clamp-2 mb-3">{item.description}</p>
                    <div className="flex justify-between items-center">
                      <span className="text-xs text-gray-500">{item.publishDate}</span>
                      <Button size="sm" variant="outline" className="h-7 px-2">
                        <ExternalLink className="h-3 w-3 mr-1" />
                        Êü•Áúã
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              );
            })}
          </div>
        </div>
      )}

      {/* ÂàÜÁ±ªÊ†áÁ≠æ */}
      <Tabs value={activeCategory} onValueChange={handleCategoryChange}>
        <TabsList>
          <TabsTrigger value="ALL">ÂÖ®ÈÉ®</TabsTrigger>
          {Object.entries(KNOWLEDGE_CATEGORIES).map(([key, category]) => (
            <TabsTrigger key={key} value={key}>
              {category.label}
            </TabsTrigger>
          ))}
        </TabsList>

        <TabsContent value={activeCategory} className="mt-6">
          {/* ÂÜÖÂÆπÂàóË°® */}
          <div className="space-y-4">
            {filteredData.length > 0 ? (
              filteredData.map((item) => {
                const categoryConfig = KNOWLEDGE_CATEGORIES[item.category as keyof typeof KNOWLEDGE_CATEGORIES];
                const Icon = categoryConfig.icon;
                
                return (
                  <Card key={item.id} className="hover:shadow-md transition-shadow">
                    <CardContent className="p-6">
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <div className="flex items-center gap-2 mb-2">
                            <Icon className="h-4 w-4" />
                            <Badge variant="secondary" className={categoryConfig.color}>
                              {categoryConfig.label}
                            </Badge>
                            {item.featured && (
                              <Badge variant="default" className="bg-red-100 text-red-800">
                                Êé®Ëçê
                              </Badge>
                            )}
                          </div>
                          
                          <h4 className="font-semibold text-lg mb-2">{item.title}</h4>
                          <p className="text-gray-600 mb-3">{item.description}</p>
                          
                          <div className="flex items-center gap-4 text-sm text-gray-500 mb-3">
                            <span>‰ΩúËÄÖ: {item.author}</span>
                            <span>ÂèëÂ∏É: {item.publishDate}</span>
                          </div>
                          
                          <div className="flex flex-wrap gap-2">
                            {item.tags.map((tag, index) => (
                              <Badge key={index} variant="outline" className="text-xs">
                                {tag}
                              </Badge>
                            ))}
                          </div>
                        </div>
                        
                        <div className="flex flex-col gap-2 ml-4">
                          <Button size="sm" variant="default">
                            <ExternalLink className="h-3 w-3 mr-1" />
                            Êü•Áúã
                          </Button>
                          {item.downloadable && (
                            <Button size="sm" variant="outline">
                              <Download className="h-3 w-3 mr-1" />
                              ‰∏ãËΩΩ
                            </Button>
                          )}
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                );
              })
            ) : (
              <div className="text-center text-gray-500 py-8">
                Ê≤°ÊúâÊâæÂà∞Áõ∏ÂÖ≥ÂÜÖÂÆπ
              </div>
            )}
          </div>
        </TabsContent>
      </Tabs>

      {/* ÁªüËÆ°‰ø°ÊÅØ */}
      <div className="text-center text-sm text-gray-500">
        Áü•ËØÜÂ∫ìÂÖ±Êî∂ÂΩï {KNOWLEDGE_BASE_DATA.length} ‰ªΩÂåªÁñóËµÑÊñôÔºåÂΩìÂâçÊòæÁ§∫ {filteredData.length} ‰ªΩ
      </div>
    </div>
  );
}